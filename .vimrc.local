" Escape with fj
inoremap fj <esc>

" Disable arrow keys
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP>

" Always show line numbers
set nu

" Enable quick help lookup
nnoremap <F1> :help <C-r><C-w><CR>

" Open vimrc.local
nnoremap <leader>ev :vsplit ~/.vimrc.local<cr>

" Source vimrc.local
nnoremap <leader>sv :source ~/.vimrc.local<cr>

" Capitalize previous word in Insert Mode
inoremap <leader><c-u> <esc>vbU

" Capitalize previous word in Normal Mode
nnoremap <leader><c-u> viwU

" Abbreviate my email
iabbrev @@ jake@jakeworth.com

" Always check spelling and turn off numbers in markdown files
augroup spellcheck_documentation
  autocmd BufNewFile,BufRead *.md setlocal spell
  autocmd BufNewFile,BufRead *.rdoc setlocal spell

  autocmd BufNewFile,BufRead *.md setlocal nonu
  autocmd BufNewFile,BufRead *.rdoc setlocal nonu
augroup END

set secure
set exrc

" Dillon and Jake Sortâ„¢
vnoremap <F5> :sort<CR>

" Friendly startup message
autocmd VimEnter * echo "Buenos Dias"

" Use a color scheme I like
color railscasts

" Allow Vim to overwrite the original crontab
au FileType crontab setlocal bkc=yes

" Neoformat setttings -------------------------------------------------
let g:neoformat_only_msg_on_error   = 1
let g:neoformat_javascript_prettier = {
  \ 'exe': 'prettier',
  \ 'args': ['--stdin', '--print-width 80', '--single-quote', '--trailing-comma es5'],
  \ 'stdin': 1,
  \ }

nnoremap <leader>p :!prettier %<CR>

augroup PrettierJs
  autocmd!
  autocmd BufWritePre *.js,*.jsx Neoformat
augroup END

" Neomake settings ----------------------------------------------------
let g:neomake_elixir_enabled_makers = ['credo']
let g:neomake_haml_enabled_makers   = ['hamllint']
let g:neomake_ruby_enabled_makers   = ['rubocop']

augroup NeoMake
  autocmd BufWritePost * Neomake
augroup END
