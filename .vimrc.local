"  ____ ____ ____ ____
" ||j |||a |||k |||e ||
" ||__|||__|||__|||__||
" |/__\|/__\|/__\|/__\|
"
" Jake Worth's .vimrc
"
"
" Settings ---------------------- {{{
" Start with all folds folded
set foldlevelstart=0

" Show line numbers
set nu

" Support project-specific .vimrc.local file
set secure
set exrc

" Ignore case of normal letters
set ignorecase

" Ignore case when using lowercase letters only
set smartcase

" Use railscasts colorscheme
color railscasts

" Allow Vim-JSX to highlight *.js files

let g:jsx_ext_required = 0

" Allow MatchTagAlways to highlight JSX
let g:mta_filetypes = {
    \ 'html' : 1,
    \ 'xhtml' : 1,
    \ 'xml' : 1,
    \ 'jinja' : 1,
    \ 'javascript.jsx' : 1,
    \}

" Turn on vim-closetag for JavaScript
let g:closetag_filenames = '*.html,*.xhtml,*.phtml,*.js'

" vim-mix-format settings
let g:mix_format_on_save = 1
let g:mix_format_options = '--check-equivalent'
let g:mix_format_silent_errors = 1
" }}}

" Mappings ---------------------- {{{
" Disable keys with better Vim mappings
noremap <up> <nop>
noremap <down> <nop>
noremap <left> <nop>
noremap <right> <nop>

" Substitute a highlighted word (h/t Vidal)
vnoremap <c-r> "hy:%s/<c-r>h//gc<left><left><left>

" Search for word under cursor. Requires RipGrep or similar
nnoremap <leader>g :<C-U>execute "Rg ".expand('<cword>') \| cw<CR>

" Enable quick help lookup
nnoremap <f1> :help <c-r><c-w><cr>

" Remove ^M linebreaks
nnoremap gsp :e ++ff=dos<cr>:w<cr>

" Open vimrc.local
nnoremap <leader>ev :vsplit $MYVIMRC.local<cr>

" Source vimrc.local
nnoremap <leader>sv :source $MYVIMRC.local<cr>

" Capitalize previous word in Insert Mode
inoremap <leader><c-u> <esc>vbU

" Capitalize previous word in Normal Mode
nnoremap <leader><c-u> viwU

" Dillon and Jake Sort™
vnoremap <f5> :sort<cr>

" Vidal and Dorian Sort™
vnoremap <silent> gs :sort<cr>

" Run Rubocop
nnoremap <leader>ru :! rubocop -a % <cr>

" Move the current line up the file
nnoremap _ ddkP

" Insert a UUID with Ruby
nnoremap ruid :read !ruby -e "require 'securerandom'; p SecureRandom.uuid"<cr>

" Insert a UUID with JS
nnoremap juid :read !node -e "var uuid = require('uuid'); console.log(uuid.v4())"<cr>

let $FZF_DEFAULT_COMMAND = 'ag --hidden -l -g ""'
nnoremap <silent> <c-b> :Buffers<cr>
nnoremap <silent> <c-g>g :Ag<cr>
nnoremap <silent> <c-p> :Files<cr>

" Yank file and line number under cursor
nnoremap <silent> yfl :let @" = join([expand('%'), line(".")], ':')<cr>
" }}}

" Abbreviations ---------------------- {{{
" Abbreviate my email
iabbrev @@ jake@jakeworth.com
" }}}

" Filetype settings ---------------------- {{{
augroup filetype_crontab
  autocmd!

  "Allow Vim to overwrite the crontab
  autocmd FileType crontab setlocal bkc=yes
augroup END

augroup filetype_go
  autocmd!
  " Run tests
  autocmd FileType go nnoremap <leader>gt :GoTest<cr>

  " Run test under cursor
  autocmd FileType go nnoremap <leader>gtf :GoTestFunc<cr>

  " Run linter
  autocmd FileType go nnoremap <leader>gl :GoLint<cr>

  " Load documentation for word under cursor
  autocmd FileType go nnoremap <leader>gd :GoDoc<cr>

  " Run program
  autocmd FileType go nnoremap <leader>gr :GoRun<cr>
augroup END

augroup filetype_docs
  autocmd!

  " Turn on spelling
  autocmd BufNewFile,BufRead *.md,*.rdoc,*.txt setlocal spell

  " Turn off numbers
  autocmd BufNewFile,BufRead *.md,*.rdoc,*.txt setlocal nonu
augroup END

augroup filetype_vim
  autocmd!
  " Fold this file on markers
  autocmd FileType vim setlocal foldmethod=marker

  " Print a quote when Vim opens
  autocmd VimEnter * :echo "\"Don’t look for the next opportunity. The one you have in hand is the opportunity.\" –Paul Adren"
augroup END

augroup filetype_haml
  autocmd!
  " Line up HAML linebreak pipes
  autocmd FileType haml vnoremap <silent> ta :Tabularize /\|<cr>
augroup END
" }}}
